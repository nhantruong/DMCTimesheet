@model IEnumerable<DMCTimesheet.Models.C07_WorkType>
@{
    ViewBag.Title = "WorkType Page";
    //Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string updateInfo = ViewBag.SaveContent;
    List<DMCTimesheet.Models.C19_Workgroup> WorkGroup = ViewBag.WorkGroup as List<DMCTimesheet.Models.C19_Workgroup>;
    int stt = 1;
}
<h3 class="text-primary">DANH MỤC QUẢN LÝ CÔNG VIỆC VÀ NHÓM CÔNG VIỆC DÙNG TRONG TIMESHEET</h3>
<hr />
<div>
    <p class="text-danger">@ViewBag.SaveContent</p>
</div>

<hr />
@* Form nhập Công việc mới *@
<div id="form" class="modal fade" role="dialog">
    <div class="modal-dialog modal-m">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Thêm loại hình công việc</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateWorktype", "Setting", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <form>
                        @* WorkType *@
                        <div class="form-group row text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3">Tên công việc</lable>
                            <input type="text" class="form-control col-md-7 col-sm-9 col-xs-9" name="WorkName" placeholder="" required="" value="" />
                        </div>
                        <div class="form-group row text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3">Nhóm</lable>
                            @*<input type="number" class="form-control col-md-7 col-sm-9 col-xs-9" name="WorkGroup" />*@
                            <select name="GroupId" class="form-control col-md-7 col-sm-9 col-xs-9">
                                @foreach (var item in WorkGroup.OrderByDescending(s => s.MaNhom))
                                {
                                    <option value="@item.GroupId">[Nhóm @item.MaNhom] - @item.GroupName</option>
                                }
                            </select>
                        </div>
                        <div class="form-group text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3 text-left"></lable>
                            <input type="submit" value="Tạo công việc" class="btn btn-success col-md-7" />
                        </div>
                    </form>
                }
            </div>
            <div class="modal-footer">

                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>
@* End Form nhập liệu *@




<div class="col-md-12">
    @* ---------------------------------DANH MỤC NHÓM CONG VIỆC------------------*@
    <div class="col-md-5">
        <div class="inline">
            <div class="col-md-8">
                <h5 class="text-primary">Danh mục các nhóm công việc [<b class="text-danger">@WorkGroup.Count()</b> nhóm]</h5>
            </div>
            <div class="col-md-2">
                <button type="button" style="margin-top:4px" class="btn btn-danger btn-small" data-toggle="modal" data-target="#modalGroup"><i class="fa fa-plus-circle"></i> Thêm Nhóm Công việc</button>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-condensed table-hover tab-pane">
                <thead class="bg-dark text-white">
                    <tr>
                        <th>Mã nhóm</th>
                        <th>Tên Nhóm</th>
                        <th>#</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="table-responsive">
            <table class="table table-condensed table-hover table-striped">
                <tbody>
                    @if (WorkGroup.Count() != 0)
                    {
                        foreach (var item in WorkGroup)
                        {
                            <tr class="table tab-content">
                                <td><b class="text-danger text-center">@item.MaNhom</b></td>
                                <td><b>@Html.ActionLink(item.GroupName.ToString(), "EditWorkGroup", "Setting", new { id = item.GroupId }, new { @class = "text-primary" })</b></td>
                                <td class="row">
                                    <div>
                                        @Html.ActionLink(" ", "DeleteWorkGroup", "Setting", new { id = item.GroupId }, new { @class = "btn fa fa-remove" })
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td>Chưa có nhóm công việc được tạo</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @* ---------------------------------DANH MỤC CONG VIỆC------------------*@
    <div class="col-md-7">
        @* Modal create new *@
        <div class="inline">
            <div class="col-md-8">
                <h5 class="text-primary">Danh mục các công việc trong timesheet [<b class="text-danger">@Model.Count()</b> đầu việc]</h5>
            </div>
            <div class="col-md-2">
                <button type="button" style="margin-top:4px" class="btn btn-info btn-small" data-toggle="modal" data-target="#form"><i class="fa fa-plus-circle"></i> Thêm Công việc</button>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-condensed table-hover tab-pane">
                <thead class="bg-dark text-white">
                    <tr>
                        <th>STT</th>
                        <th>Tên công việc</th>
                        <th>Nhóm công việc</th>
                        <th>#</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="table-responsive">
            <table class="table table-condensed table-hover table-striped">
                <tbody>
                    @if (Model.Count() != 0)
                    {
                        foreach (var item in Model.OrderByDescending(s => s.GroupId))
                        {
                            <tr class="table tab-content">
                                <td class="text-center">@stt</td>
                                <td><b>@Html.ActionLink(item.WorkName.ToString(), "EditWorktype", "Setting", new { id = item.ID }, new { @class = "text-primary" })</b></td>
                                <td>Nhóm <b class="text-primary">@WorkGroup.FirstOrDefault(s => s.GroupId == item.GroupId).MaNhom</b> - @WorkGroup.FirstOrDefault(s => s.GroupId == item.GroupId).GroupName  </td>
                                <td class="row">
                                    <div>
                                        @Html.ActionLink(" ", "DeleteWorktype", "Setting", new { id = item.ID }, new { @class = "btn fa fa-remove" })
                                    </div>
                                </td>
                            </tr>
                            stt++;
                        }
                        @*foreach (var item in Model.GroupBy(s => s.GroupId))
                        {
                            <tr class="row">
                                <td class="text-danger col-md-12">Nhóm <b class="text-primary">@WorkGroup.FirstOrDefault(s => s.GroupId == item.Key).MaNhom</b> - @WorkGroup.FirstOrDefault(s => s.GroupId == item.Key).GroupName</td>
                            </tr>
                            foreach (var itm in item.ToList())
                            {
                                <tr class="table tab-content">
                                    <td class="text-center">@stt</td>
                                    <td><b>@Html.ActionLink(itm.WorkName.ToString(), "EditWorktype", "Setting", new { id = itm.ID }, new { @class = "text-primary" })</b></td>
                                    <td>Nhóm <b class="text-primary">@WorkGroup.FirstOrDefault(s => s.GroupId == itm.GroupId).MaNhom</b> - @WorkGroup.FirstOrDefault(s => s.GroupId == itm.GroupId).GroupName  </td>
                                    <td class="row">
                                        <div>
                                            @Html.ActionLink(" ", "DeleteWorktype", "Setting", new { id = itm.ID }, new { @class = "btn fa fa-remove" })
                                        </div>
                                    </td>
                                </tr>
                                stt++;
                            }

                        }*@
                    }
                    else
                    {
                        <tr>
                            <td>Chưa có danh mục công việc được tạo</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>



</div>


@* Form nhập liệu *@
<div id="modalGroup" class="modal fade" role="dialog">
    <div class="modal-dialog modal-m">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-danger">Thêm nhóm công việc</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateWorkGroup", "Setting", FormMethod.Post))
                {
                    int hint = WorkGroup.Select(s => s.MaNhom).Distinct().Count();
                    int nextgroup = hint + 1;
                    @Html.AntiForgeryToken()
                    <form>
                        @* WorkType *@
                        <div class="form-group row text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3">Mã quản lý nhóm</lable>
                            <input type="number" class="form-control col-md-7 col-sm-9 col-xs-9" name="MaNhom"
                                   data-toggle="tooltip" data-placement="left" id="cmbworktype" title="Số nhóm (hiện tại đang có @hint nhóm)"
                                   placeholder="tạm đặt " required="" value="@nextgroup" />
                        </div>

                        <div class="form-group row text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3">Tên Nhóm</lable>
                            <input type="text" class="form-control col-md-7 col-sm-9 col-xs-9" name="GroupName" placeholder="" required="" value="" />
                        </div>

                        <div class="form-group text-left">
                            <lable class="control-label col-md-3 col-sm-3 col-xs-3 text-left"></lable>
                            <input type="submit" value="Tạo nhóm mới" class="btn btn-danger col-md-7" />
                        </div>
                    </form>
                }
            </div>
            <div class="modal-footer">

                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>
@* End Form nhập liệu *@


<script type="text/javascript">
    //function for updating Worktype record
    function UpdateWorktype() {
        var res = ValidateUserInput();
        if (res == false) {
            return false;
        }
        var WorkTypeObj = {
            Id: $('#txtId').val(),
            WorkName: $('#txtWorkName').val(),
            WorkGroup: $('#txtWorkGroup').val(),
        };
        if (!WorkTypeObj.Id || WorkTypeObj.Id <= 0) {
            alert("Invalid Id!");
            return false;
        }
        $.ajax({
            url: "/Timesheet/UpdateWorktype",
            data: JSON.stringify(WorkTypeObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                BindWorktypeData();
                ClearAllInput();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function OpenEditPopup(ID) {
        ClearAllInput();
        $.ajax({
            url: "/Timesheet/GetWorktypebyID?ID=" + ID,
            typr: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {
                debugger;
                /*$("#AddUpdateModelLabel").val("Update Patient Detail")*/
                $('#txtId').val(result.Id);
                $('#txtWorkName').val(result.PatientName);
                $('#txtWorkGroup').val(result.PatientNumber);

                $('#AddUpdateModel').modal('show');
                $('#btnUpdate').show();
                $('#btnDelete').hide();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        return false;
    }

    function ClearAllInput() {
        $('#txtId').val("");
        $('#txtWorkName').val("");
        $('#txtWorkGroup').val("");

        $('#txtId').css('border-color', 'lightgrey');
        $('#txtWorkName').css('border-color', 'lightgrey');
        $('#txtWorkGroup').css('border-color', 'lightgrey');
    }


</script>


