@model IEnumerable<DMCTimesheet.Models.C03_ProjectMembers>
@{
    DMCTimesheet.Models.C06_UserPermisRelationship Userpermiss = Session["UserPermission"] as DMCTimesheet.Models.C06_UserPermisRelationship;
    DMCTimesheet.Models.C02_Members loginUser = Session["UserLogin"] as DMCTimesheet.Models.C02_Members;

    List<DMCTimesheet.Models.C01_Projects> Projects = ViewBag.Projects as List<DMCTimesheet.Models.C01_Projects>;

    List<DMCTimesheet.Models.C02_Members> _Members = ViewBag.Members as List<DMCTimesheet.Models.C02_Members>;
    List<DMCTimesheet.Models.C02_Members> Members = _Members.OrderBy(s => s.FullName).ToList();
    List<DMCTimesheet.com.cbimtech.MemberServices.MemberOutput> BIMer = ViewBag.BIMer as List<DMCTimesheet.com.cbimtech.MemberServices.MemberOutput>;
    string Error = Session["MemberAssignError"] as string ?? "";
    List<KeyValuePair<int, List<int?>>> ProjectOfMember = new List<KeyValuePair<int, List<int?>>>();
    List<string> ChartLabels = new List<string>();
    List<double> ChartValue = new List<double>();
    List<DMCTimesheet.Models.C01_Projects> ProjectNeedAssign = new List<DMCTimesheet.Models.C01_Projects>();

    //Image
    string imgPath = "../Assets/Photos/MemberImage/";
    string NoimagePath = "../Assets/Photos/MemberImage/no-image.jpg";

    if (Model != null)
    {
        ProjectNeedAssign.Clear();
        //Danh sách dự án chưa điều phối
        foreach (var item in Model)
        {
            ProjectNeedAssign = Projects.Where(p => p.ProjectID != item.ProjectID).Distinct().ToList();
        }
        //Lấy dự án của từng người
        foreach (var mem in Members.Where(s => s.SystemMember == false))
        {
            KeyValuePair<int, List<int?>> keyValuePair = new KeyValuePair<int, List<int?>>(mem.UserID, Model.Where(s => s.ChuTriChinh == mem.UserID
            || s.ChuTriKienTruc == mem.UserID
            || s.ChuTriKetCau == mem.UserID
            || s.ChuTriMEP == mem.UserID
            || s.Admin == mem.UserID
            || s.LegalManager == mem.UserID).Select(p => p.ProjectID).ToList());

            ProjectOfMember.Add(keyValuePair);
        }

        //Chart data
        foreach (var item in ProjectOfMember)
        {
            ChartLabels.Add(Members.First(s => s.UserID == item.Key).FullName);
            ChartValue.Add(item.Value.Count());
        }
    }


}
<script src="~/UserStyles/Chart.js/dist/Chart.min.js"></script>
<link href="~/Content/cscpda-scrollbar.css" rel="stylesheet" />

@* Modal create new *@
<div>
</div>
<div><b class="text-danger">@ViewBag.Error</b></div>
@* Form nhập liệu *@
<div id="newAssignMember" class="modal fade" role="dialog">
    <div class="modal-dialog modal-m">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Thêm Thành viên cho dự án mới</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("NewAssignMember", "Member", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <form>
                        <div class="form-group row">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3 text-left">Ngày</lable>
                            <input type="date" class="form-control col-sm-7 col-sm-9 col-xs-9" name="Ngay" placeholder="" required="" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>
                        @* ProjectTypeID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3"><b class="text-danger">Tên dự án</b></lable>
                            <select required name="ProjectID" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Projects.OrderBy(s => s.ProjectOtherName))
                                {
                                    <option value=@item.ProjectID>@item.ProjectOtherName</option>
                                }
                            </select>
                        </div>
                        @* ARC ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3"><b>Chủ trì Dự án</b></lable>
                            <select name="ChuTriChinh" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>
                        @* interior ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3">Chủ trì bộ môn <b class="text-primary">Kiến trúc</b></lable>
                            <select name="ChuTriKienTruc" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.Descipline == 1 && s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>
                        @* Structure ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3">Chủ trì bộ môn <b class="text-primary">Kết cấu</b></lable>
                            <select name="ChuTriKetCau" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.Descipline == 2 && s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>

                        @* MEP ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3">Chủ trì bộ môn <b class="text-primary">Cơ điện - MEPF</b></lable>
                            <select name="ChuTriMEP" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.Descipline == 3 && s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>
                        @* Legal ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3"><b class="text-primary">Pháp lý</b></lable>
                            <select name="LegalManager" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3"><b class="text-primary">Admin</b></lable>
                            <select name="Admin" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in Members.Where(s => s.SystemMember == false).OrderBy(s => s.UserName))
                                {
                                    <option value=@item.UserID>@item.FullName</option>
                                }
                            </select>
                        </div>
                        @* BIM ID *@
                        <div class="form-group row  text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3">Quản lý <b class="text-primary">BIM</b></lable>
                            <select name="BIMManager" class="form-control col-sm-7 col-sm-9 col-xs-9">
                                <option value=""></option>
                                @foreach (var item in BIMer.Where(s => s.UserType == "User").OrderBy(s => s.SoftName))
                                {
                                    <option value=@item.ID>@item.SoftName</option>
                                }
                            </select>
                        </div>
                        <br />
                        <div class="clearfix"></div>

                        <div class="form-group text-left">
                            <lable class="control-label col-sm-3 col-sm-3 col-xs-3 text-left"></lable>
                            <input type="submit" value="Save" class="btn btn-success col-sm-7" />
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>
@* End Form nhập liệu *@
<div class="clearfix"></div>
<h3 class="text-danger"><i>@Error</i></h3>
<div class="clearfix"></div>


<div class="clearfix"></div>
<div class="col-sm-12">
    <div class="col-sm-9">
        <h3 class="text-left">DANH SÁCH THÀNH VIÊN THEO DỰ ÁN</h3>
    </div>
    <div class="col-sm-3 text-right">
        <button type="button" class="btn btn-warning btn-small text-right" data-toggle="modal" data-target="#newAssignMember"><i class="fa fa-plus"></i> Thêm điều phối Thành viên cho dự án mới</button>
    </div>
</div>
<div class="clearfix"></div>

<div>
    <table class="table">
        <thead class="table-dark">
            <tr class="row text-center">
                <td class="col-sm-1"><b>Ngày lập</b></td>
                <td class="col-sm-2"><b>Dự án</b></td>
                <td class="col-sm-1"><b>Chủ trì dự án</b></td>
                <td class="col-sm-1"><b>Chủ trì Kiến trúc</b></td>
                <td class="col-sm-1"><b>Chủ trì Kết cấu</b></td>
                <td class="col-sm-1"><b>Chủ trì MEP</b></td>
                <td class="col-sm-1"><b>Pháp lý</b></td>
                <td class="col-sm-1"><b>Admin</b></td>
                <td class="col-sm-1"><b>Quản lý BIM</b></td>
                <td class="col-sm-1"><b>Xóa</b></td>
            </tr>
        </thead>
    </table>
</div>
<div class="table-responsive scrollbar">
    <table class="table table-hover table-bordered table-striped">
        <caption>Số lượng dự án <b class="text-danger">@Model.Count()</b></caption>        
        <tbody>
            @if (Model == null || Model.Count() == 0)
            {
                <tr class="row">
                    <td>Chưa chỉ định Nhân sự cho dự án</td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    string name = @Projects.FirstOrDefault(s => s.ProjectID == item.ProjectID).MaDuAn + "-" + @Projects.FirstOrDefault(s => s.ProjectID == item.ProjectID).ProjectOtherName;

                    <tr class="row text-dark text-center">
                        <td class="col-sm-1">@DateTime.Parse(item.Ngay.ToString()).ToShortDateString()</td>
                        <td class="col-sm-2 text-left"><b>@Html.ActionLink(name, "EditAssign", "Member", new { Id = item.ID }, new { @class = "text-primary" })</b></td>
                        <td class="col-sm-1">
                            @if (item.ChuTriChinh != null)
                            {
                                <b class="text-danger">@Members.FirstOrDefault(s => s.UserID == item.ChuTriChinh).FullName</b>
                            }
                        </td>
                        <td class="col-sm-1">
                            @if (item.ChuTriKienTruc != null)
                            {
                                @Members.FirstOrDefault(s => s.UserID == item.ChuTriKienTruc).FullName
                            }
                        </td>
                        <td class="col-sm-1">
                            @if (item.ChuTriKetCau != null)
                            {
                                @Members.FirstOrDefault(s => s.UserID == item.ChuTriKetCau).FullName
                            }
                        </td>
                        <td class="col-sm-1">
                            @if (item.ChuTriMEP != null)
                            {
                                @Members.FirstOrDefault(s => s.UserID == item.ChuTriMEP).FullName
                            }
                        </td>
                        <td class="col-sm-1">
                            @if (item.LegalManager != null)
                            {
                                @Members.FirstOrDefault(s => s.UserID == item.LegalManager).FullName
                            }

                        </td>
                        <td class="col-sm-1">
                            @if (item.Admin != null)
                            {
                                @Members.FirstOrDefault(s => s.UserID == item.Admin).FullName
                            }

                        </td>
                        <td class="col-sm-1">
                            @if (item.BIMManager != null)
                            {
                                @BIMer.FirstOrDefault(s => s.ID == item.BIMManager).SoftName
                            }
                        </td>
                        <td class="col-sm-1">@Html.ActionLink(" ", "DeleteAssigned", "Member", new { ID = item.ID }, new { @class = "btn fa fa-remove" })</td>
                    </tr>
                }
            }

        </tbody>
    </table>
</div>


<hr />
<div class="clearfix"></div>
<h3 class="text-center text-primary">CÔNG VIỆC ĐƯỢC GIAO</h3>
<div>
    @* Bản thống kê *@
    <div class="col-sm-6">
        <h5 class="text-center">Bảng thống kê số lượng dự án theo thành viên</h5>
        <div class="table-responsive-sm scrollbar">
            <table class="table table-bordered table-condensed table-striped">
                <thead class="text-center">
                    <tr class="text-white" style="background-color:#808080">
                        <td class="col-sm-3">Tên thành viên</td>
                        <td class="col-sm-2">SL dự án</td>
                        <td class="col-sm-7">Tên dự án</td>
                    </tr>
                </thead>
                <tbody>
                    @if (Model == null || Model.Count() == 0)
                    {
                        <tr class="row">
                            <td>Chưa có thông tin</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in ProjectOfMember)
                        {
                            if (item.Value.Count() != 0)
                            {
                                string UserImg = "";
                                if (Members.FirstOrDefault(s => s.UserID == item.Key).Image == null)
                                {
                                    UserImg = NoimagePath;
                                }
                                else
                                {
                                    UserImg = imgPath + @Members.FirstOrDefault(s => s.UserID == item.Key).Image;
                                }
                                <tr class="text-dark text-center row">
                                    <td class="col-sm-3 text-center">
                                        <p>

                                            <img src="@UserImg" class="img-circle" alt="Alternate Text" style="height:50px; width:50px" />
                                        </p>
                                        <p>
                                            <b>@Members.FirstOrDefault(s => s.UserID == item.Key).FullName</b>
                                        </p>

                                    </td>
                                    <td class="col-sm-2">@item.Value.Count()</td>
                                    <td class="col-sm-7">
                                        <ol class="col">
                                            @foreach (var itm in item.Value.ToList())
                                            {
                                                <li class="col-sm-6 text-left"><b>@Projects.FirstOrDefault(s => s.ProjectID == itm).ProjectOtherName</b></li>

                                            }
                                        </ol>

                                    </td>
                                </tr>
                            }

                        }
                    }
                </tbody>
            </table>
        </div>
    </div>


    @* Biểu đồ dự án theo nhân sự *@
    <div class="col-sm-6">
        <h5 class="text-center">Biểu đồ số lượng dự án theo thành viên</h5>
        <div>
            <canvas id="ProjectOfMemberSummary"></canvas>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            function searchFailed() {
                $("#searchResult").html("Không thấy dữ liệu.");
            }
        });
    </script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

@* Chart code *@
<script>
    var ctx = document.getElementById('ProjectOfMemberSummary').getContext('2d');
    var lable = @Html.Raw(Json.Encode(ChartLabels));
    var data =@Html.Raw(Json.Encode(ChartValue));
   var myChart = new Chart(ctx, {
       type: 'bar',
                        data: {
                        labels:  lable,
                            datasets: [{
                                label: '',
                                data: data,
                                backgroundColor: 'rgba(255, 255, 64, 0.3)',
                                borderColor:'rgba(255, 128, 128, 1)',
                                borderWidth: 1
                            }]
                        },
       options: {
           scales: {
               yAxes: [{
                   ticks: {
                       beginAtZero: true
                       /*lables: lablesVlue, type: 'category',*/
                   }
               }]
           },
           showToolTips: true,
           legend: { display: false },
           animation:
           {
               duration: 0,
               onComplete: function () {
                   var ctx = this.chart.ctx;
                   ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
                   ctx.fillStyle = this.chart.config.options.defaultFontColor;
                   ctx.textAlign = 'top';
                   ctx.textBaseline = 'top';
                   this.data.datasets.forEach(function (dataset) {
                       for (var i = 0; i < dataset.data.length; i++) {
                           var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model;
                           ctx.fillText(dataset.data[i], model.x, model.y - 5);
                       }
                   });
               }
           }
       }
                    });
</script>
